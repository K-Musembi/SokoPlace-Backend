# SokoPlace-Backend Application Configuration
# This external file overrides the properties packaged within the .jar file.
spring.application.name=SokoPlace-Backend

# ===================================================================
# CORE INFRASTRUCTURE SETTINGS
# ===================================================================

# Database Configuration
# Assumes a PostgreSQL database running on the same server (localhost).
# IMPORTANT: For a real production environment, it is highly recommended to use
# environment variables or a secrets management service (e.g., HashiCorp Vault, AWS Secrets Manager)
# for the username and password instead of hardcoding them here.
spring.datasource.url=jdbc:postgresql://localhost:5432/sokoplace_db
spring.datasource.username=musembi
spring.datasource.password=my_password
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool (HikariCP) Configuration
# A pool size of 10 is a reasonable starting point for many applications.
spring.datasource.hikari.maximum-pool-size=10

# JPA/Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# CRITICAL for production: 'none' ensures Hibernate does not alter the DB schema.
# Schema management should be handled exclusively by Flyway.
spring.jpa.hibernate.ddl-auto=none
# Set to 'false' in production to avoid excessive logging and potential performance impact.
spring.jpa.show-sql=false

# Flyway Database Migrations
# Ensures that Flyway runs on startup to apply any pending database schema changes.
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=false

# Logging Configuration
# Set the general logging level to INFO for production.
# You can set specific packages to DEBUG if needed for troubleshooting.
logging.level.root=INFO
logging.level.com.sokoplace=INFO
logging.level.org.springframework.web=INFO
# Keep Hibernate logging at a higher level to avoid noise.
logging.level.org.hibernate=WARN

# Server settings
server.port=8080
